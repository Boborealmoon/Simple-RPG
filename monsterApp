<html>
<head>
    <title>Monster Game</title>
    <script src="https://cdnjs.com/libraries/mathjs"></script>
    <script src="https://unpkg.com/vue@next"></script>
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous"> 
    <!-- Bootstrap JS bundle to be placed before the closing </body> tag -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL" crossorigin="anonymous"></script> 
</head>
<body>
    <div id="app" >
        <div class="container d-flex text-center pt-4">
        <div class="col-5">    
            <h3>YOU</h3> 
            <div class="bg-secondary">            
                <div :style="player_health_style">
                    {{ health_player }}
                </div>
            </div>
        </div>
        <div class="col-2">

        </div>
        <div class="col-5">    
            <h3>MONSTER</h3> 
            <div class="bg-secondary">            
                <div :style="monster_health_style">
                    {{ health_monster }}
                </div>
            </div>
        </div>
        </div>


        <div id="gameSection" class="text-center py-2">
            <button class="btn btn-primary text-center" @click="gameStart" v-show="!gamestart">START NEW GAME</button>
            <div v-show="gamestart" class="border border-dark my-2 mx-2 py-2">
                <button class="btn btn-danger mx-2" @click="attack"> Attack </button>
                <button class="btn btn-warning mx-2" @click="specialAttack"> Special Attack </button>
                <button class="btn btn-success mx-2" @click="heal"> Heal </button>
                <button class="btn btn-primary mx-2" @click="giveUp"> Give Up </button>
            </div>
        </div>

        <div id="gameDialogue" class="text-center">
            <div v-if="gamestart" :class="dialogueBoxStyle">
                {{gameDialouge}}
                <div v-for="line in dialougueList" class="text-start px-3 pb-1">
                    {{line}}
                </div>
            </div>

            <div v-else :class="dialogueBoxStyle">
                {{gameNoStart}}
            </div>
        </div>

    </div>
    <script>
        const app = Vue.createApp({
            data() {
                return {
                    health_player:100,
                    // player_health_status:"",
                    health_monster:100,
                    // monster_health_status:"",

                    // Health Background
                    player_health_style:"width:100%; background-color:green; text-align:center;",
                    monster_health_style:"width:100%; background-color:green; text-align:center;",

                    // Game state control
                    gamestart:false,
                    
                    // State dialouges
                    gameNoStart:"Game hasn't started!",
                    gameDialouge:"Game has started!",
                    dialougueList:[],
                    dialogueBoxStyle:"border border-dark py-2 mx-3 "

                }
                
            },
            methods:{
                gameStart(){
                    this.health_player=100
                    this.health_monster=100
                    this.dialougueList=[]
                    return this.gamestart=!this.gamestart
                },
                giveUp(){
                    this.gameNoStart = "You gave up, Loser!"
                    return this.gamestart = false;
                    
                },
                attack(){
                    // Damage Numbers
                    player_dmg = Math.floor(Math.random() * (15 - 0 + 1) + 0)
                    monster_dmg = this.monsterAttack()
                    //Deducting numbers from the players
                    this.health_player = this.health_player - monster_dmg
                    this.health_monster = this.health_monster - player_dmg
                    //dialogue
                    this.dialougueList.push(`You attacked and Monster suffered ${player_dmg} points`)
                    this.dialougueList.push(`Monster attacked and You suffered ${monster_dmg} points`)
                },
                monsterAttack(){
                    dmg =  Math.floor(Math.random() * (15 - 0 + 1) + 0)
                    return dmg
                },
                specialAttack(){
                    player_dmg = Math.floor(Math.random() * (30 - 0 + 1) + 0)
                    monster_dmg = this.monsterAttack()
                    //Deducting numbers from the players
                    this.health_player = this.health_player - monster_dmg
                    this.health_monster = this.health_monster - player_dmg
                    //dialogue
                    this.dialougueList.push(`You attacked and Monster suffered ${player_dmg} points`)
                    this.dialougueList.push(`Monster attacked and You suffered ${monster_dmg} points`)
                },
                heal(){
                    player_heal = Math.floor(Math.random() * (30 - 0 + 1) + 0)
                    monster_dmg = this.monsterAttack()
                    //Deducting numbers from the players
                    this.health_player = this.health_monster + player_heal               
                    this.health_player = this.health_player - monster_dmg
                    //dialogue
                    this.dialougueList.push(`A wizard has healed you with ${player_heal} points`)
                    this.dialougueList.push(`Monster attacked and You suffered ${monster_dmg} points`)
                }

            },
                // computed: {

                // },
            
            watch:{
                health_player(newValue ,oldValue ){
                    let ratio_player = newValue
                    this.player_health_style = `width:${ratio_player}%; background-color:green; text-align:center;`
                    
                    // Death Condition
                    if(newValue <= 0){
                        this.health_player=0
                        this.gamestart =false 
                        this.gameNoStart = "You Died"
                    }
                },
                health_monster(newValue,oldValue){
                    let ratio_monster = newValue
                    this.monster_health_style = `width:${ratio_monster}%; background-color:green; text-align:center;`
                    
                    //Win Condition
                    if(newValue <= 0){
                        this.health_monster =0
                        this.gamestart =false 
                        this.gameNoStart = "Congratulations, You won the Game!"
                    }
                },
            }
        })
    
        const vm = app.mount('#app')
    </script>
</body>
</html>